name: CD - Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Build with Gradle (bootJar)
        run : |
          cd cicd
          chmod +x gradlew
          ./gradlew bootJar

      - name: Create Version Tag
        id : create_tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GHCR_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          release_name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.create_tag.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor}}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ steps.create_tag.outputs.new_tag }}

      - name: Build and Push Docker Image to GHCR
        uses: docker/build-push-action@v4
        with:
          context: ./cicd
          file: ./cicd/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Deploy to Oracle VM via SSH
        if: success()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_URL }}
          username: ${{ secrets.ORACLE_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker pull ghcr.io/${{ github.repository }}:${{ steps.create_tag.outputs.new_tag }}
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp --network test-net -p 8080:8080 --restart unless-stopped ghcr.io/${{ github.repository }}:${{ steps.create_tag.outputs.new_tag }}